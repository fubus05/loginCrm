{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Documents/crm/src/screens/Login.js\";\nimport * as React from 'react';\nimport FormControlUnstyled from '@mui/base/FormControlUnstyled';\nimport { Box } from '@mui/system';\nimport InputLabel from '@mui/material/InputLabel';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseFormControl() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      background: 'linear-gradient(131.46deg, #F8FAFB 28.17%, #EDF5FF 94.9%), #F8FAFB;'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControlUnstyled, {\n      defaultValue: \"\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"input-with-icon-adornment\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: _ref2 => {\n          let {\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 10\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlUnstyled, {\n      defaultValue: \"\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = UseFormControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFormControl\");","map":{"version":3,"names":["React","FormControlUnstyled","Box","InputLabel","Formik","UseFormControl","background","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"sources":["/Users/ivan/Documents/crm/src/screens/Login.js"],"sourcesContent":["import * as React from 'react';\nimport FormControlUnstyled from '@mui/base/FormControlUnstyled';\nimport { Box } from '@mui/system';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport { Formik } from 'formik';\n\nexport default function UseFormControl() {\n  return (\n        <Box sx={{background: 'linear-gradient(131.46deg, #F8FAFB 28.17%, #EDF5FF 94.9%), #F8FAFB;'}}>\n            <FormControlUnstyled defaultValue=\"\" required>\n            <InputLabel htmlFor=\"input-with-icon-adornment\">\n                Email\n            </InputLabel>\n            <Formik\n       initialValues={{ email: '', password: '' }}\n       validate={values => {\n         const errors = {};\n         if (!values.email) {\n           errors.email = 'Required';\n         } else if (\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n         ) {\n           errors.email = 'Invalid email address';\n         }\n         return errors;\n       }}\n       onSubmit={(values, { setSubmitting }) => {\n         setTimeout(() => {\n           alert(JSON.stringify(values, null, 2));\n           setSubmitting(false);\n         }, 400);\n       }}\n     >\n       {({ isSubmitting }) => (\n         <Form>\n           <Field type=\"email\" name=\"email\" />\n           <ErrorMessage name=\"email\" component=\"div\" />\n           <Field type=\"password\" name=\"password\" />\n           <ErrorMessage name=\"password\" component=\"div\" />\n           <button type=\"submit\" disabled={isSubmitting}>\n             Submit\n           </button>\n         </Form>\n       )}\n     </Formik>\n            </FormControlUnstyled>\n            <FormControlUnstyled defaultValue=\"\" required>\n\n            </FormControlUnstyled>\n        </Box>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,SAASC,cAAT,GAA0B;EACvC,oBACM,QAAC,GAAD;IAAK,EAAE,EAAE;MAACC,UAAU,EAAE;IAAb,CAAT;IAAA,wBACI,QAAC,mBAAD;MAAqB,YAAY,EAAC,EAAlC;MAAqC,QAAQ,MAA7C;MAAA,wBACA,QAAC,UAAD;QAAY,OAAO,EAAC,2BAApB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAIA,QAAC,MAAD;QACL,aAAa,EAAE;UAAEC,KAAK,EAAE,EAAT;UAAaC,QAAQ,EAAE;QAAvB,CADV;QAEL,QAAQ,EAAEC,MAAM,IAAI;UAClB,MAAMC,MAAM,GAAG,EAAf;;UACA,IAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;YACjBG,MAAM,CAACH,KAAP,GAAe,UAAf;UACD,CAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,EAEL;YACAG,MAAM,CAACH,KAAP,GAAe,uBAAf;UACD;;UACD,OAAOG,MAAP;QACD,CAZI;QAaL,QAAQ,EAAE,CAACD,MAAD,WAA+B;UAAA,IAAtB;YAAEG;UAAF,CAAsB;UACvCC,UAAU,CAAC,MAAM;YACfC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;YACAG,aAAa,CAAC,KAAD,CAAb;UACD,CAHS,EAGP,GAHO,CAAV;QAID,CAlBI;QAAA,UAoBJ;UAAA,IAAC;YAAEK;UAAF,CAAD;UAAA,oBACC,QAAC,IAAD;YAAA,wBACE,QAAC,KAAD;cAAO,IAAI,EAAC,OAAZ;cAAoB,IAAI,EAAC;YAAzB;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,YAAD;cAAc,IAAI,EAAC,OAAnB;cAA2B,SAAS,EAAC;YAArC;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE,QAAC,KAAD;cAAO,IAAI,EAAC,UAAZ;cAAuB,IAAI,EAAC;YAA5B;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE,QAAC,YAAD;cAAc,IAAI,EAAC,UAAnB;cAA8B,SAAS,EAAC;YAAxC;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAQ,IAAI,EAAC,QAAb;cAAsB,QAAQ,EAAEA,YAAhC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALF;UAAA;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;MApBI;QAAA;QAAA;QAAA;MAAA,QAJA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAsCI,QAAC,mBAAD;MAAqB,YAAY,EAAC,EAAlC;MAAqC,QAAQ;IAA7C;MAAA;MAAA;MAAA;IAAA,QAtCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADN;AA4CD;KA7CuBZ,c"},"metadata":{},"sourceType":"module"}