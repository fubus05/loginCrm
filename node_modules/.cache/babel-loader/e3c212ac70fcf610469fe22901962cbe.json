{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Documents/crm/src/screens/Login.js\";\nimport * as React from 'react';\nimport { Box } from '@mui/system';\nimport InputLabel from '@mui/material/InputLabel';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button, Link } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseFormControl() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      background: 'linear-gradient(131.46deg, #F8FAFB 28.17%, #EDF5FF 94.9%), #F8FAFB;',\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        background: 'white',\n        marginTop: '50%',\n        height: '60%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: _ref2 => {\n          let {\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"input-with-icon-adornment\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"input-with-icon-adornment\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                children: \"aAA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              sx: {\n                display: 'block',\n                width: '100%',\n                background: '#1E86FF',\n                color: 'white'\n              },\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = UseFormControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFormControl\");","map":{"version":3,"names":["React","Box","InputLabel","Formik","Form","Field","ErrorMessage","Button","Link","UseFormControl","background","display","justifyContent","height","marginTop","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","width","color"],"sources":["/Users/ivan/Documents/crm/src/screens/Login.js"],"sourcesContent":["import * as React from 'react';\nimport { Box } from '@mui/system';\nimport InputLabel from '@mui/material/InputLabel';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button, Link } from '@mui/material';\n\nexport default function UseFormControl() {\n  return (\n        <Box sx={{\n            background: 'linear-gradient(131.46deg, #F8FAFB 28.17%, #EDF5FF 94.9%), #F8FAFB;',\n            display: 'flex',\n            justifyContent: 'center',\n            height: '100vh'\n            }}>\n            <Box sx={{\n                background: 'white',\n                marginTop: '50%',\n                height: '60%'\n            }}>\n                <Formik\n                    initialValues={{ email: '', password: '' }}\n                    validate={values => {\n                        const errors = {};\n                        if (!values.email) {\n                        errors.email = 'Required';\n                        } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                        errors.email = 'Invalid email address';\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                        alert(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                        }, 400);\n                    }}\n                    >\n                    {({ isSubmitting }) => (\n                    <Form >\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\n                            Email\n                        </InputLabel>\n                        <Field type=\"email\" name=\"email\" />\n                        <ErrorMessage name=\"email\" component=\"div\" />\n                        <Box display=\"flex\" justifyContent='space-between'>\n                            <InputLabel htmlFor=\"input-with-icon-adornment\">\n                                Password\n                            </InputLabel>\n                            <Link>aAA</Link>\n                        </Box>\n                        <Field type=\"password\" name=\"password\" />\n                        <ErrorMessage name=\"password\" component=\"div\" />\n                        <Button type=\"submit\" disabled={isSubmitting} sx={{display: 'block' , width: '100%' , background: '#1E86FF', color: 'white'}}>\n                            Log In\n                        </Button>\n                    </Form>\n                    )}\n                </Formik>\n            </Box>\n        </Box>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,eAA7B;;AAEA,eAAe,SAASC,cAAT,GAA0B;EACvC,oBACM,QAAC,GAAD;IAAK,EAAE,EAAE;MACLC,UAAU,EAAE,qEADP;MAELC,OAAO,EAAE,MAFJ;MAGLC,cAAc,EAAE,QAHX;MAILC,MAAM,EAAE;IAJH,CAAT;IAAA,uBAMI,QAAC,GAAD;MAAK,EAAE,EAAE;QACLH,UAAU,EAAE,OADP;QAELI,SAAS,EAAE,KAFN;QAGLD,MAAM,EAAE;MAHH,CAAT;MAAA,uBAKI,QAAC,MAAD;QACI,aAAa,EAAE;UAAEE,KAAK,EAAE,EAAT;UAAaC,QAAQ,EAAE;QAAvB,CADnB;QAEI,QAAQ,EAAEC,MAAM,IAAI;UAChB,MAAMC,MAAM,GAAG,EAAf;;UACA,IAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;YACnBG,MAAM,CAACH,KAAP,GAAe,UAAf;UACC,CAFD,MAEO,IACP,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADM,EAEL;YACFG,MAAM,CAACH,KAAP,GAAe,uBAAf;UACC;;UACD,OAAOG,MAAP;QACH,CAZL;QAaI,QAAQ,EAAE,CAACD,MAAD,WAA+B;UAAA,IAAtB;YAAEG;UAAF,CAAsB;UACrCC,UAAU,CAAC,MAAM;YACjBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;YACAG,aAAa,CAAC,KAAD,CAAb;UACC,CAHS,EAGP,GAHO,CAAV;QAIH,CAlBL;QAAA,UAoBK;UAAA,IAAC;YAAEK;UAAF,CAAD;UAAA,oBACD,QAAC,IAAD;YAAA,wBACI,QAAC,UAAD;cAAY,OAAO,EAAC,2BAApB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAII,QAAC,KAAD;cAAO,IAAI,EAAC,OAAZ;cAAoB,IAAI,EAAC;YAAzB;cAAA;cAAA;cAAA;YAAA,QAJJ,eAKI,QAAC,YAAD;cAAc,IAAI,EAAC,OAAnB;cAA2B,SAAS,EAAC;YAArC;cAAA;cAAA;cAAA;YAAA,QALJ,eAMI,QAAC,GAAD;cAAK,OAAO,EAAC,MAAb;cAAoB,cAAc,EAAC,eAAnC;cAAA,wBACI,QAAC,UAAD;gBAAY,OAAO,EAAC,2BAApB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII,QAAC,IAAD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA,QANJ,eAYI,QAAC,KAAD;cAAO,IAAI,EAAC,UAAZ;cAAuB,IAAI,EAAC;YAA5B;cAAA;cAAA;cAAA;YAAA,QAZJ,eAaI,QAAC,YAAD;cAAc,IAAI,EAAC,UAAnB;cAA8B,SAAS,EAAC;YAAxC;cAAA;cAAA;cAAA;YAAA,QAbJ,eAcI,QAAC,MAAD;cAAQ,IAAI,EAAC,QAAb;cAAsB,QAAQ,EAAEA,YAAhC;cAA8C,EAAE,EAAE;gBAACd,OAAO,EAAE,OAAV;gBAAoBe,KAAK,EAAE,MAA3B;gBAAoChB,UAAU,EAAE,SAAhD;gBAA2DiB,KAAK,EAAE;cAAlE,CAAlD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAdJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADC;QAAA;MApBL;QAAA;QAAA;QAAA;MAAA;IALJ;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADN;AAwDD;KAzDuBlB,c"},"metadata":{},"sourceType":"module"}