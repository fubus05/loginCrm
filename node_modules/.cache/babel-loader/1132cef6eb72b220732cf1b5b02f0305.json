{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Documents/crm/src/screens/Login.js\";\nimport * as React from 'react';\nimport FormControlUnstyled from '@mui/base/FormControlUnstyled';\nimport { Box } from '@mui/system';\nimport InputLabel from '@mui/material/InputLabel';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseFormControl() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      background: 'linear-gradient(131.46deg, #F8FAFB 28.17%, #EDF5FF 94.9%), #F8FAFB;'\n    },\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: _ref2 => {\n        let {\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlUnstyled, {\n            defaultValue: \"\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"input-with-icon-adornment\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = UseFormControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFormControl\");","map":{"version":3,"names":["React","FormControlUnstyled","Box","InputLabel","Formik","Form","Field","ErrorMessage","UseFormControl","background","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"sources":["/Users/ivan/Documents/crm/src/screens/Login.js"],"sourcesContent":["import * as React from 'react';\nimport FormControlUnstyled from '@mui/base/FormControlUnstyled';\nimport { Box } from '@mui/system';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nexport default function UseFormControl() {\n  return (\n        <Box sx={{background: 'linear-gradient(131.46deg, #F8FAFB 28.17%, #EDF5FF 94.9%), #F8FAFB;'}}>\n        <Formik\n            initialValues={{ email: '', password: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.email) {\n                errors.email = 'Required';\n                } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                errors.email = 'Invalid email address';\n                }\n                return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                setSubmitting(false);\n                }, 400);\n            }}\n            >\n            {({ isSubmitting }) => (\n                <Form>\n                <FormControlUnstyled defaultValue=\"\" required>\n                    <InputLabel htmlFor=\"input-with-icon-adornment\">\n                        Email\n                    </InputLabel>\n                    <Formik></Formik>\n                </FormControlUnstyled>\n                <Field type=\"email\" name=\"email\" />\n                <ErrorMessage name=\"email\" component=\"div\" />\n                <Field type=\"password\" name=\"password\" />\n                <ErrorMessage name=\"password\" component=\"div\" />\n                <button type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                </button>\n                </Form>\n            )}\n        </Formik>\n        </Box>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;AAEA,eAAe,SAASC,cAAT,GAA0B;EACvC,oBACM,QAAC,GAAD;IAAK,EAAE,EAAE;MAACC,UAAU,EAAE;IAAb,CAAT;IAAA,uBACA,QAAC,MAAD;MACI,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAT;QAAaC,QAAQ,EAAE;MAAvB,CADnB;MAEI,QAAQ,EAAEC,MAAM,IAAI;QAChB,MAAMC,MAAM,GAAG,EAAf;;QACA,IAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;UACnBG,MAAM,CAACH,KAAP,GAAe,UAAf;QACC,CAFD,MAEO,IACP,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADM,EAEL;UACFG,MAAM,CAACH,KAAP,GAAe,uBAAf;QACC;;QACD,OAAOG,MAAP;MACH,CAZL;MAaI,QAAQ,EAAE,CAACD,MAAD,WAA+B;QAAA,IAAtB;UAAEG;QAAF,CAAsB;QACrCC,UAAU,CAAC,MAAM;UACjBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;UACAG,aAAa,CAAC,KAAD,CAAb;QACC,CAHS,EAGP,GAHO,CAAV;MAIH,CAlBL;MAAA,UAoBK;QAAA,IAAC;UAAEK;QAAF,CAAD;QAAA,oBACG,QAAC,IAAD;UAAA,wBACA,QAAC,mBAAD;YAAqB,YAAY,EAAC,EAAlC;YAAqC,QAAQ,MAA7C;YAAA,wBACI,QAAC,UAAD;cAAY,OAAO,EAAC,2BAApB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAII,QAAC,MAAD;cAAA;cAAA;cAAA;YAAA,QAJJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADA,eAOA,QAAC,KAAD;YAAO,IAAI,EAAC,OAAZ;YAAoB,IAAI,EAAC;UAAzB;YAAA;YAAA;YAAA;UAAA,QAPA,eAQA,QAAC,YAAD;YAAc,IAAI,EAAC,OAAnB;YAA2B,SAAS,EAAC;UAArC;YAAA;YAAA;YAAA;UAAA,QARA,eASA,QAAC,KAAD;YAAO,IAAI,EAAC,UAAZ;YAAuB,IAAI,EAAC;UAA5B;YAAA;YAAA;YAAA;UAAA,QATA,eAUA,QAAC,YAAD;YAAc,IAAI,EAAC,UAAnB;YAA8B,SAAS,EAAC;UAAxC;YAAA;YAAA;YAAA;UAAA,QAVA,eAWA;YAAQ,IAAI,EAAC,QAAb;YAAsB,QAAQ,EAAEA,YAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAXA;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MAAA;IApBL;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADN;AA0CD;KA3CuBZ,c"},"metadata":{},"sourceType":"module"}